#! /bin/bash

# check the free/used driver capacity to send warning
USAGE="`basename $0` [-w|--warning]<percent free> [-c|--critical]<percent free>"
THRESHOLD_USAGE="WARNING threshold must be greater than CRITICAL: `basename $0` $*"
critical=""
warning=""

if [[ $# -lt 4 ]]
then
        echo ""
        echo "Wrong Syntax: `basename $0` $*"
        echo ""
        echo "Usage: $USAGE"
        echo ""
        exit 0
fi

# read input
while [[ $# -gt 0 ]]
  do
        case "$1" in
               -w|--warning)
               shift
               warning=$1
        ;;
               -c|--critical)
               shift
               critical=$1
        ;;
        esac
        shift
  done

# verify input
if [[ $warning -eq $critical || $warning -lt $critical ]]
then
        echo ""
        echo "$THRESHOLD_USAGE"
        echo ""
        echo "Usage: $USAGE"
        echo ""
        exit 0
fi

unit=bytes
capfile=/tmp/sfx_cap
echo "sfx capacity information" > ${capfile}
sfx_list=`lsblk | grep sfdv | awk '{print $1}'`
for dev in ${sfx_list}
do
    sfx_size=/sys/block/${dev}/sfx_smart_features/sfx_capacity_stat
    #Free_space physical_size logical_size comp_ratio

    szl=`grep -A1 physical_size ${sfx_size} | grep -e [0-9] | awk '{print $1","$2","$3","$4}'`
    szlist=${szl%,}
    f=`echo ${szlist} | cut -d ',' -f 1`
    p=`echo ${szlist} | cut -d ',' -f 2`
    l=`echo ${szlist} | cut -d ',' -f 3`
    ro=`echo ${szlist} | cut -d ',' -f 4`
    fz=`expr ${f} \* 512`
    pz=`expr ${p} \* 512`
    lz=`expr ${l} \* 512`
    #echo -e "ssd=${dev}, free_sapce (B)=${fz}, physical_size (B)=${pz}, logical_size (B)=${lz}, comp_ratio=${ro}"
    # caculate the free logical size
    ttl=`expr ${f} + ${l}` 
    percent=`echo "${f}*100/${ttl}" | bc`
    info="${dev} free space:${fz} ${unit} , (${percent}%) Free disk. physical_size (B)=${pz}, comp_ratio=${ro}"
    if [[ "${percent}" -le  ${critical} ]]
        then
                echo "CRITICAL - ${info}" >> ${capfile}
    fi
    if [[ "${percent}" -le  ${warning} ]]
        then
                echo "WARNING - ${info}" >> ${capfile}
    fi
    if [[ "${percent}" -gt  ${warning} ]]
        then
                echo "OK - ${info}" >> ${capfile}
    fi
done

grep "CRITICAL" /tmp/sfx_cap
if [ $? -eq 0 ]; then
    exit 2
fi

grep "WARNING" /tmp/sfx_cap
if [ $? -eq  0 ]; then
    exit 1
fi

grep "OK" /tmp/sfx_cap
if [ $? -eq  0 ]; then
    exit 0
fi
