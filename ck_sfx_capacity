#! /bin/bash

#
# ck_sfx_capacity takes two threshold values: warning and critical,
# warning must be greater than critical 
# returning successfully if the free_space% is >  warning
# returning warning state if the free_space% is in the range  (critical, warning]
# returning critical state if the free_space% is in the range [0,critical]
# alert should be raised based on the two thresholds.
# Values may be integers.
#
# Example usage:
#
# Generating an exit code of 0:
# ck_sfx_capacity 85 10
#
# Generating an exit code of 1 with warning alert:
# or an exit code of 2 with critical alert
# ck_sfx_capacity 30 10
#

USAGE="`basename $0` [-w|--warning]<percent free> [-c|--critical]<percent free>"
THRESHOLD_USAGE="WARNING threshold must be greater than CRITICAL: `basename $0` $*"
critical=""
warning=""

if [[ $# -lt 4 ]]
then
        echo ""
        echo "Wrong Syntax: `basename $0` $*"
        echo ""
        echo "Usage: $USAGE"
        echo ""
        exit 0
fi

# read input
while [[ $# -gt 0 ]]
  do
        case "$1" in
               -w|--warning)
               shift
               warning=$1
        ;;
               -c|--critical)
               shift
               critical=$1
        ;;
        esac
        shift
  done

# verify the parameters are valid
pvlist="${warning} ${critical}"
for pv in ${pvlist}
do
    len=`echo "${pv}"|sed 's/[0-9]//g'`
    if [ -n "${len}" ] ; then
        echo "threshold must be integer" 
        exit 0
    fi
done

# verify input
if [[ $warning -eq $critical || $warning -lt $critical ]]
then
        echo ""
        echo "$THRESHOLD_USAGE"
        echo ""
        echo "Usage: $USAGE"
        echo ""
        exit 0
fi

sysdir=/sys/block/sfdv*
unit=bytes
capfile=/tmp/sfx_cap
echo "sfx capacity information" > ${capfile}

sfx_list=`ls -d ${sysdir}`
for dev in ${sfx_list}
do
    #Free_space physical_size logical_size comp_ratio
    sfx_dir=${dev}/sfx_smart_features
    f=`cat ${sfx_dir}/sfx_freespace`
    p=`cat ${sfx_dir}/sfx_physical_size`
    l=`cat ${sfx_dir}/sfx_logical_size`
    ro=`cat ${sfx_dir}/sfx_comp_ratio`
    fz=`expr ${f} \* 512`
    pz=`expr ${p} \* 512`
    lz=`expr ${l} \* 512`
    # caculate the free logical size
    ttl=`expr ${f} + ${l}` 
    percent=`echo "${f}*100/${ttl}" | bc`
    info="`basename ${dev}` free space:${fz} ${unit} , (${percent}%) Free disk. physical_size (B)=${pz}, comp_ratio=${ro}"

    if [[ "${percent}" -le  ${critical} ]]
        then
                echo "CRITICAL - ${info}" >> ${capfile}
    elif [[ "${percent}" -le  ${warning} ]]
        then
                echo "WARNING - ${info}" >> ${capfile}
    elif [[ "${percent}" -gt  ${warning} ]]
        then
                echo "OK - ${info}" >> ${capfile}
    fi
done

cat ${capfile}

grep -q "CRITICAL" ${capfile}
if [ $? -eq 0 ]; then
    exit 2
fi

grep -q "WARNING" ${capfile} 
if [ $? -eq  0 ]; then
    exit 1
fi

grep -q "OK" ${capfile} 
if [ $? -eq  0 ]; then
    exit 0
fi
